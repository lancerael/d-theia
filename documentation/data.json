{
    "project": {
        "name": "dTheia",
        "description": "A basic library for creating chart visualisations.",
        "version": "1.00"
    },
    "files": {
        "src\\components\\axis-chart.js": {
            "name": "src\\components\\axis-chart.js",
            "modules": {},
            "classes": {
                "AxisChart": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src\\components\\axis.js": {
            "name": "src\\components\\axis.js",
            "modules": {},
            "classes": {
                "Axis": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src\\components\\bar-chart.js": {
            "name": "src\\components\\bar-chart.js",
            "modules": {},
            "classes": {
                "BarChart": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src\\components\\bubble-chart.js": {
            "name": "src\\components\\bubble-chart.js",
            "modules": {},
            "classes": {
                "BubbleChart": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src\\components\\chart.js": {
            "name": "src\\components\\chart.js",
            "modules": {},
            "classes": {
                "Chart": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src\\components\\colors.js": {
            "name": "src\\components\\colors.js",
            "modules": {},
            "classes": {
                "Colors": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src\\components\\key.js": {
            "name": "src\\components\\key.js",
            "modules": {},
            "classes": {
                "Key": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src\\components\\line-chart.js": {
            "name": "src\\components\\line-chart.js",
            "modules": {},
            "classes": {
                "LineChart": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src\\components\\theia.js": {
            "name": "src\\components\\theia.js",
            "modules": {
                "Theia": 1
            },
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "src\\components\\tooltip.js": {
            "name": "src\\components\\tooltip.js",
            "modules": {},
            "classes": {
                "Tooltip": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src\\components\\utilities.js": {
            "name": "src\\components\\utilities.js",
            "modules": {},
            "classes": {
                "Utilities": 1
            },
            "fors": {},
            "namespaces": {}
        }
    },
    "modules": {
        "Theia": {
            "name": "Theia",
            "submodules": {},
            "elements": {},
            "classes": {
                "AxisChart": 1,
                "Axis": 1,
                "BarChart": 1,
                "BubbleChart": 1,
                "Chart": 1,
                "Colors": 1,
                "Key": 1,
                "LineChart": 1,
                "Tooltip": 1,
                "Utilities": 1
            },
            "fors": {},
            "namespaces": {},
            "tag": "module",
            "file": "src\\components\\utilities.js",
            "line": 3,
            "description": "Theia is the main API for dTheia - a reusable charting library built using d3 v.4 and ES6"
        }
    },
    "classes": {
        "AxisChart": {
            "name": "AxisChart",
            "shortname": "AxisChart",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "Theia",
            "file": "src\\components\\axis-chart.js",
            "line": 6,
            "description": "Create AxisChart from the supplied data, based on the supplied JSON config.",
            "extends": "Chart",
            "is_constructor": 1
        },
        "Axis": {
            "name": "Axis",
            "shortname": "Axis",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "Theia",
            "file": "src\\components\\axis.js",
            "line": 4,
            "description": "The Axis object is used to instantiate x and y axes, as well as labels",
            "is_constructor": 1
        },
        "BarChart": {
            "name": "BarChart",
            "shortname": "BarChart",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "Theia",
            "file": "src\\components\\bar-chart.js",
            "line": 4,
            "description": "Create BarCharts from the supplied data, based on the JSON config.",
            "extends": "AxisChart",
            "is_constructor": 1
        },
        "BubbleChart": {
            "name": "BubbleChart",
            "shortname": "BubbleChart",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "Theia",
            "file": "src\\components\\bubble-chart.js",
            "line": 6,
            "description": "Create BubbleCharts from the supplied data, based on the supplied JSON config.",
            "extends": "Chart",
            "is_constructor": 1
        },
        "Chart": {
            "name": "Chart",
            "shortname": "Chart",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "Theia",
            "file": "src\\components\\chart.js",
            "line": 5,
            "description": "The Chart object is the parent class for all types of Chart.",
            "is_constructor": 1
        },
        "Colors": {
            "name": "Colors",
            "shortname": "Colors",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "Theia",
            "file": "src\\components\\colors.js",
            "line": 4,
            "description": "The Colors object is is a class containing reusable static methods"
        },
        "Key": {
            "name": "Key",
            "shortname": "Key",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "Theia",
            "file": "src\\components\\key.js",
            "line": 1,
            "description": "The Key shows how the colours represent the data",
            "is_constructor": 1
        },
        "LineChart": {
            "name": "LineChart",
            "shortname": "LineChart",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "Theia",
            "file": "src\\components\\line-chart.js",
            "line": 4,
            "description": "Create LineCharts from the supplied data, based on the JSON config.",
            "extends": "AxisChart",
            "is_constructor": 1
        },
        "Tooltip": {
            "name": "Tooltip",
            "shortname": "Tooltip",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "Theia",
            "namespace": "",
            "file": "src\\components\\tooltip.js",
            "line": 3,
            "description": "The Tooltip",
            "is_constructor": 1
        },
        "Utilities": {
            "name": "Utilities",
            "shortname": "Utilities",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "Theia",
            "namespace": "",
            "file": "src\\components\\utilities.js",
            "line": 3,
            "description": "The Utilities object is is a class containing reusable static methods"
        }
    },
    "elements": {},
    "classitems": [
        {
            "file": "src\\components\\axis-chart.js",
            "line": 19,
            "description": "Constructor function supersedes parent class.",
            "itemtype": "method",
            "name": "constructor",
            "params": [
                {
                    "name": "oParams",
                    "description": "same as Chart",
                    "type": "Object"
                }
            ],
            "class": "AxisChart"
        },
        {
            "file": "src\\components\\axis-chart.js",
            "line": 32,
            "description": "Supersede the parent method to update local scaling objects",
            "itemtype": "method",
            "name": "setDimensions",
            "class": "AxisChart"
        },
        {
            "file": "src\\components\\axis-chart.js",
            "line": 47,
            "description": "Render the chart including axes and labels",
            "itemtype": "method",
            "name": "renderChart",
            "class": "AxisChart"
        },
        {
            "file": "src\\components\\axis.js",
            "line": 21,
            "description": "Constructor function which sets up the local object.",
            "itemtype": "method",
            "name": "constructor",
            "params": [
                {
                    "name": "oParams",
                    "description": "configuration parameters object",
                    "type": "Object"
                }
            ],
            "throws": {
                "description": "invalid parameters",
                "type": "Error"
            },
            "class": "Axis"
        },
        {
            "file": "src\\components\\axis.js",
            "line": 36,
            "description": "Master render to call all rendering methods",
            "itemtype": "method",
            "name": "render",
            "chainable": 1,
            "class": "Axis"
        },
        {
            "file": "src\\components\\axis.js",
            "line": 49,
            "description": "Render only the x axis",
            "itemtype": "method",
            "name": "renderAxisX",
            "class": "Axis"
        },
        {
            "file": "src\\components\\axis.js",
            "line": 74,
            "description": "Render only the y axis",
            "itemtype": "method",
            "name": "renderAxisY",
            "class": "Axis"
        },
        {
            "file": "src\\components\\axis.js",
            "line": 89,
            "description": "Render only the labels",
            "itemtype": "method",
            "name": "renderLabels",
            "class": "Axis"
        },
        {
            "file": "src\\components\\bar-chart.js",
            "line": 14,
            "description": "Render the chart including bars, axes and labels",
            "itemtype": "method",
            "name": "renderChart",
            "params": [
                {
                    "name": "bReset",
                    "description": "optionally reset the chart data",
                    "type": "Boolean"
                }
            ],
            "class": "BarChart"
        },
        {
            "file": "src\\components\\bubble-chart.js",
            "line": 16,
            "description": "Constructor function supersedes parent class.",
            "itemtype": "method",
            "name": "constructor",
            "params": [
                {
                    "name": "oParams",
                    "description": "same as Chart",
                    "type": "Object"
                }
            ],
            "class": "BubbleChart"
        },
        {
            "file": "src\\components\\bubble-chart.js",
            "line": 27,
            "description": "Supersede the parent method to update local scaling objects",
            "itemtype": "method",
            "name": "setDimensions",
            "class": "BubbleChart"
        },
        {
            "file": "src\\components\\bubble-chart.js",
            "line": 39,
            "description": "Render the chart including bubbles, axes and labels",
            "itemtype": "method",
            "name": "renderChart",
            "class": "BubbleChart"
        },
        {
            "file": "src\\components\\chart.js",
            "line": 28,
            "description": "Constructor function that sets up the local object.",
            "itemtype": "method",
            "name": "constructor",
            "params": [
                {
                    "name": "jConfig",
                    "description": "JSON configuration object",
                    "type": "JSON Object"
                },
                {
                    "name": "aData",
                    "description": "the data to be displayed",
                    "type": "Array"
                },
                {
                    "name": "sContainer",
                    "description": "Optional ID to select DOM object",
                    "type": "String"
                },
                {
                    "name": "dContainer",
                    "description": "Optional DOM object in place of ID",
                    "type": "DOM Element"
                }
            ],
            "class": "Chart"
        },
        {
            "file": "src\\components\\chart.js",
            "line": 61,
            "description": "Sets the local container object.",
            "itemtype": "method",
            "name": "setContainer",
            "params": [
                {
                    "name": "dContainer",
                    "description": "Required DOM element",
                    "type": "DOM Element"
                }
            ],
            "throws": {
                "description": "invalid DOM element",
                "type": "Error"
            },
            "class": "Chart"
        },
        {
            "file": "src\\components\\chart.js",
            "line": 77,
            "description": "Sets the local config options for the chart.",
            "itemtype": "method",
            "name": "setConfig",
            "params": [
                {
                    "name": "jConfig",
                    "description": "JSON configuration object",
                    "type": "JSON Object"
                }
            ],
            "throws": {
                "description": "missing configuration",
                "type": "Error"
            },
            "class": "Chart"
        },
        {
            "file": "src\\components\\chart.js",
            "line": 95,
            "description": "Sets the local data for the chart.",
            "itemtype": "method",
            "name": "setData",
            "params": [
                {
                    "name": "aData",
                    "description": "array of JSON objects",
                    "type": "Array"
                }
            ],
            "throws": {
                "description": "missing data",
                "type": "Error"
            },
            "class": "Chart"
        },
        {
            "file": "src\\components\\chart.js",
            "line": 113,
            "description": "Sets the local chart dimensions based on the size of the container.",
            "itemtype": "method",
            "name": "setDimensions",
            "throws": {
                "description": "missing DOM element",
                "type": "Error"
            },
            "class": "Chart"
        },
        {
            "file": "src\\components\\chart.js",
            "line": 130,
            "description": "Maps custom data keys into standard structure.",
            "itemtype": "method",
            "name": "transformDataKeys",
            "class": "Chart"
        },
        {
            "file": "src\\components\\chart.js",
            "line": 159,
            "description": "Check chart is ready and render.",
            "itemtype": "method",
            "name": "init",
            "throws": {
                "description": "chart not ready for initialisation",
                "type": "Error"
            },
            "class": "Chart"
        },
        {
            "file": "src\\components\\colors.js",
            "line": 11,
            "description": "Returns a random color",
            "itemtype": "method",
            "name": "getRandomColor",
            "return": {
                "description": "randomly generated RGB object",
                "type": "RGB object"
            },
            "class": "Colors"
        },
        {
            "file": "src\\components\\colors.js",
            "line": 22,
            "description": "Returns a random color palette",
            "itemtype": "method",
            "name": "getRandomPalette",
            "params": [
                {
                    "name": "iLength",
                    "description": "the size of the palette",
                    "type": "Integer"
                }
            ],
            "return": {
                "description": "list of randomly generated RGB objects",
                "type": "Array"
            },
            "class": "Colors"
        },
        {
            "file": "src\\components\\colors.js",
            "line": 38,
            "description": "Returns a darker version of a color",
            "itemtype": "method",
            "name": "getDarkerColor",
            "params": [
                {
                    "name": "oColor",
                    "description": "RGB object",
                    "type": "RGB object"
                }
            ],
            "return": {
                "description": "darker RGB object",
                "type": "RGB object"
            },
            "class": "Colors"
        },
        {
            "file": "src\\components\\key.js",
            "line": 13,
            "description": "Constructor function that sets up the local object.",
            "itemtype": "method",
            "name": "constructor",
            "params": [
                {
                    "name": "d3Container",
                    "description": "A d3 wrapped container element",
                    "type": "D3 Collection"
                },
                {
                    "name": "aValues",
                    "description": "the data to be displayed",
                    "type": "Array"
                },
                {
                    "name": "iOffsetX",
                    "description": "optional x offset",
                    "type": "Integer"
                },
                {
                    "name": "iOffsetY",
                    "description": "optional y offset",
                    "type": "Integer"
                }
            ],
            "class": "Key"
        },
        {
            "file": "src\\components\\key.js",
            "line": 33,
            "description": "Render the key showing the labels for the colour values",
            "itemtype": "method",
            "name": "render",
            "chainable": 1,
            "class": "Key"
        },
        {
            "file": "src\\components\\line-chart.js",
            "line": 15,
            "description": "Render the chart including lines, axes and labels",
            "itemtype": "method",
            "name": "renderChart",
            "class": "LineChart"
        },
        {
            "file": "src\\components\\theia.js",
            "line": 14,
            "description": "Create a chart and return object",
            "itemtype": "method",
            "name": "chart",
            "params": [
                {
                    "name": "sContainer",
                    "description": "ID to select container DOM object",
                    "type": "String"
                },
                {
                    "name": "sType",
                    "description": "string denoting the type of chart",
                    "type": "String"
                },
                {
                    "name": "jParams",
                    "description": "includes target DOM object, JSON config and array of data",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "oChart returns a chart object of the requested type",
                "type": "Chart object"
            },
            "class": "Tooltip",
            "module": "Theia"
        },
        {
            "file": "src\\components\\theia.js",
            "line": 42,
            "description": "Create a bar chart and return object",
            "itemtype": "method",
            "name": "createBarChart",
            "params": [
                {
                    "name": "oParams",
                    "description": "contains the configuration for the chart",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "returns a bar chart object",
                "type": "BarChart object"
            },
            "class": "Tooltip",
            "module": "Theia"
        },
        {
            "file": "src\\components\\theia.js",
            "line": 53,
            "description": "Create a line chart and return object",
            "itemtype": "method",
            "name": "createLineChart",
            "params": [
                {
                    "name": "oParams",
                    "description": "contains the configuration for the chart",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "returns a line chart object",
                "type": "LineChart object"
            },
            "class": "Tooltip",
            "module": "Theia"
        },
        {
            "file": "src\\components\\theia.js",
            "line": 64,
            "description": "Create a line chart and return object",
            "itemtype": "method",
            "name": "createBubbleChart",
            "params": [
                {
                    "name": "oParams",
                    "description": "contains the configuration for the chart",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "returns a bubble chart object",
                "type": "BubbleChart object"
            },
            "class": "Tooltip",
            "module": "Theia"
        },
        {
            "file": "src\\components\\theia.js",
            "line": 75,
            "description": "Return a public Utilities module",
            "itemtype": "method",
            "name": "getUtilities",
            "class": "Tooltip",
            "module": "Theia"
        },
        {
            "file": "src\\components\\tooltip.js",
            "line": 15,
            "description": "Constructor function that sets up the local object.",
            "itemtype": "method",
            "name": "constructor",
            "params": [
                {
                    "name": "oContainer",
                    "description": "DOM object",
                    "type": "DOM Element"
                }
            ],
            "class": "Tooltip",
            "module": "Theia"
        },
        {
            "file": "src\\components\\tooltip.js",
            "line": 29,
            "description": "Create the tooltip DOM and return object",
            "itemtype": "method",
            "name": "create",
            "chainable": 1,
            "class": "Tooltip",
            "module": "Theia"
        },
        {
            "file": "src\\components\\tooltip.js",
            "line": 42,
            "description": "Ping the tooltip with data and location",
            "itemtype": "method",
            "name": "ping",
            "params": [
                {
                    "name": "x",
                    "description": "Location of x tooltip position",
                    "type": "Integer"
                },
                {
                    "name": "y",
                    "description": "Location of y tooltip position",
                    "type": "Integer"
                },
                {
                    "name": "sContent",
                    "description": "inner html content",
                    "type": "String"
                }
            ],
            "class": "Tooltip",
            "module": "Theia"
        },
        {
            "file": "src\\components\\utilities.js",
            "line": 10,
            "description": "Returns a promise resolving with JSON when supplied with a valid URL",
            "itemtype": "method",
            "name": "getPromiseJSON",
            "params": [
                {
                    "name": "sUrl",
                    "description": "Required URL to make request",
                    "type": "String"
                }
            ],
            "throws": {
                "description": "invalid api string",
                "type": "Error"
            },
            "class": "Utilities",
            "module": "Theia"
        },
        {
            "file": "src\\components\\utilities.js",
            "line": 36,
            "description": "Truncates a string and adds ellipsis.",
            "itemtype": "method",
            "name": "truncateString",
            "params": [
                {
                    "name": "sString",
                    "description": "string to be truncated",
                    "type": "String"
                },
                {
                    "name": "iMaxLength",
                    "description": "max length of string before truncation",
                    "type": "Integer"
                }
            ],
            "return": {
                "description": "truncated string",
                "type": "String"
            },
            "class": "Utilities",
            "module": "Theia"
        },
        {
            "file": "src\\components\\utilities.js",
            "line": 51,
            "description": "Generates a random integer within a range.",
            "itemtype": "method",
            "name": "getRandomInteger",
            "params": [
                {
                    "name": "iMin",
                    "description": "minimum random value",
                    "type": "Integer"
                },
                {
                    "name": "iMax",
                    "description": "max random value",
                    "type": "Integer"
                },
                {
                    "name": "iOmit",
                    "description": "optional excempt integer",
                    "type": "Integer"
                }
            ],
            "return": {
                "description": "new random integer",
                "type": "Integer"
            },
            "class": "Utilities",
            "module": "Theia"
        },
        {
            "file": "src\\components\\utilities.js",
            "line": 68,
            "description": "Returns a sample selection from an array (minmum length 3).",
            "itemtype": "method",
            "name": "sliceSampleData",
            "params": [
                {
                    "name": "aData",
                    "description": "the complete data set",
                    "type": "Array"
                },
                {
                    "name": "iMaxLength",
                    "description": "max length of sample",
                    "type": "Integer"
                }
            ],
            "return": {
                "description": "sliced section of data",
                "type": "Array"
            },
            "class": "Utilities",
            "module": "Theia"
        },
        {
            "file": "src\\components\\utilities.js",
            "line": 82,
            "description": "Returns random data and config for demo purposes.",
            "itemtype": "method",
            "name": "getRandomChart",
            "return": {
                "description": "JSON style data structure",
                "type": "JSON"
            },
            "class": "Utilities",
            "module": "Theia"
        }
    ],
    "warnings": []
}